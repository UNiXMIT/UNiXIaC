- name: Create AcuSupport
  file:
    path: "/home/{{ myUsername }}/AcuSupport"
    state: directory
    mode: '0775'

- name: Create AcuDataFiles
  file:
    path: "/home/{{ myUsername }}/AcuSupport/AcuDataFiles"
    state: directory
    mode: '0775'

- name: Create AcuLogs
  file:
    path: "/home/{{ myUsername }}/AcuSupport/AcuLogs"
    state: directory
    mode: '0775'

- name: Create AcuResources
  file:
    path: "/home/{{ myUsername }}/AcuSupport/AcuResources"
    state: directory
    mode: '0775'

- name: Create AcuSamples
  file:
    path: "/home/{{ myUsername }}/AcuSupport/AcuSamples"
    state: directory
    mode: '0775'

- name: Create AcuScripts
  file:
    path: "/home/{{ myUsername }}/AcuSupport/AcuScripts"
    state: directory
    mode: '0775'

- name: Create CustomerPrograms
  file:
    path: "/home/{{ myUsername }}/AcuSupport/CustomerPrograms"
    state: directory
    mode: '0775'

- name: Create etc
  file:
    path: "/home/{{ myUsername }}/AcuSupport/etc"
    state: directory
    mode: '0775'

- name: Download setenvacu.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/AcuScripts/setenvacu.sh
    dest: /home/{{ myUsername }}/AcuSupport/AcuScripts/setenvacu.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download startacu.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/AcuScripts/startacu.sh
    dest: /home/{{ myUsername }}/AcuSupport/AcuScripts/startacu.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download a_srvcfg
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/a_srvcfg
    dest: /home/{{ myUsername }}/AcuSupport/etc/a_srvcfg
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download acurcl.cfg
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/acurcl.cfg
    dest: /home/{{ myUsername }}/AcuSupport/etc/acurcl.cfg
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download acurcl.ini
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/acurcl.ini
    dest: /home/{{ myUsername }}/AcuSupport/etc/acurcl.ini
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download boomerang.cfg
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/boomerang.cfg
    dest: /home/{{ myUsername }}/AcuSupport/etc/boomerang.cfg
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed
  
- name: Download boomerang_alias.ini
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/boomerang_alias.ini
    dest: /home/{{ myUsername }}/AcuSupport/etc/boomerang_alias.ini
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download cblconfig
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/cblconfig
    dest: /home/{{ myUsername }}/AcuSupport/etc/cblconfig
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download fillCombo.js
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/fillCombo.js
    dest: /home/{{ myUsername }}/AcuSupport/etc/fillCombo.js
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download gateway.conf
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/gateway.conf
    dest: /home/{{ myUsername }}/AcuSupport/etc/gateway.conf
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download gateway.toml
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/gateway.toml
    dest: /home/{{ myUsername }}/AcuSupport/etc/gateway.toml
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download TCPtuning.conf
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXextend/master/linux/etc/TCPtuning.conf
    dest: /home/{{ myUsername }}/AcuSupport/etc/TCPtuning.conf
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Create MFSupport
  file:
    path: "/home/{{ myUsername }}/MFSupport"
    state: directory
    mode: '0775'
  
- name: Create CTF
  file:
    path: "/home/{{ myUsername }}/MFSupport/CTF"
    state: directory
    mode: '0775'

- name: Create CTF/TEXT
  file:
    path: "/home/{{ myUsername }}/MFSupport/CTF/TEXT"
    state: directory
    mode: '0775'

- name: Create CTF/BIN
  file:
    path: "/home/{{ myUsername }}/MFSupport/CTF/BIN"
    state: directory
    mode: '0775'

- name: Create MFScripts
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFScripts"
    state: directory
    mode: '0775'

- name: Create MFSamples
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples"
    state: directory
    mode: '0775'

- name: Create MFInstallers
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFInstallers"
    state: directory
    mode: '0775'

- name: Create MFDataFiles
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFDataFiles"
    state: directory
    mode: '0775'

- name: Download setupmf.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/setupmf.sh
    dest: /home/{{ myUsername }}/MFSupport/MFScripts/setupmf.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download startmf.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/startmf.sh
    dest: /home/{{ myUsername }}/MFSupport/MFScripts/startmf.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download setenvmf.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/setenvmf.sh
    dest: /home/{{ myUsername }}/MFSupport/MFScripts/setenvmf.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed
  
- name: Download formatdumps.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/formatdumps.sh
    dest: /home/{{ myUsername }}/MFSupport/MFScripts/formatdumps.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download autopac.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/autopac.sh
    dest: /home/{{ myUsername }}/MFSupport/MFScripts/autopac.sh
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download disableSecurity.sh
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/refs/heads/main/linux/MFScripts/disableSecurity.sh
    dest: "/home/{{ myUsername }}/MFSupport/MFScripts/disableSecurity.sh"
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download ctf.cfg
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/refs/heads/main/windows/ctf.cfg
    dest: "/home/{{ myUsername }}/MFSupport/CTF/ctf.cfg"
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Create JCL
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/JCL"
    state: directory
    mode: '0775'

- name: Create system
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/JCL/system"
    state: directory
    mode: '0775'

- name: Create catalog
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/JCL/catalog"
    state: directory
    mode: '0775'

- name: Create dataset
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/JCL/dataset"
    state: directory
    mode: '0775'

- name: Create loadlib
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/JCL/loadlib"
    state: directory
    mode: '0775'

- name: Download JCL.xml
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/JCL.xml
    dest: /home/{{ myUsername }}/MFSupport/MFSamples/JCL/JCL.xml
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Create CICS
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/CICS"
    state: directory
    mode: '0775'

- name: Create system
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/CICS/system"
    state: directory
    mode: '0775'

- name: Create dataset
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/CICS/dataset"
    state: directory
    mode: '0775'

- name: Create loadlib
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/CICS/loadlib"
    state: directory
    mode: '0775'

- name: Create catalog
  file:
    path: "/home/{{ myUsername }}/MFSupport/MFSamples/CICS/catalog"
    state: directory
    mode: '0775'

- name: Download CICS.xml
  get_url:
    url: https://raw.githubusercontent.com/UNiXMIT/UNiXMF/main/linux/MFScripts/CICS.xml
    dest: /home/{{ myUsername }}/MFSupport/MFSamples/CICS/CICS.xml
    mode: '0775'
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Create Products
  file:
    path: /home/products
    state: directory
    mode: '0775'

- name: Create /home/{{ myUsername }}/.Xauthority
  ansible.builtin.file:
    path: /home/{{ myUsername }}/.Xauthority
    state: touch
    mode: '0600'

- name: Recursively Change Ownership of /home/{{ myUsername }} Directories
  file:
    path: /home/{{ myUsername }}
    state: directory
    recurse: yes
    owner: '{{ myUsername }}'
    group: '{{ myUsername }}'
    
- name: Change Ownership of /home/products Directory
  file:
    path: /home/products
    state: directory
    recurse: yes
    owner: '{{ myUsername }}'
    group: '{{ myUsername }}'