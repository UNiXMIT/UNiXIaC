- name: SSO 2FA
  hosts: local
  gather_facts: no
  tasks:
  - name: Import sso.yml
    import_tasks: sso.yml
  no_log: True
  tags: default

- name: AWS EC2 Management
  hosts: local
  vars:
    tempName: SEM-{{ 2048 | random }}
  gather_facts: no
  tasks:
  - name: Create AWS EC2 instance
    amazon.aws.ec2_instance:
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: {{ myUsername }}
      name: '{{ tempName }}'
      image_id: '{{ awsAMI }}'
      key_name: '{{ keyName }}'
      network:  
        assign_public_ip: yes
      security_groups: '{{ securityGroups }}'
      region: '{{ awsRegion }}'
      availability_zone: '{{ availabilityZone }}'
      aws_profile: '{{ awsProfile }}'
      instance_type: '{{ instanceType }}'
      count: '{{ vmCount | default(1) }}'
      volumes:
      - device_name: '{{ deviceName }}'
        ebs:
         volume_type: '{{ volumeType }}'
         volume_size: '{{ volumeSize }}'
      state: running
      wait: true
    register: ec2
    no_log: True
    tags: default

  - name: Add Host to awsEC2 Group 
    add_host: 
       hostname: '{{ item.public_ip_address }}'
       ansible_port: 22
       ansible_user: '{{ myUsername }}'
       ansible_ssh_private_key_file: '{{ keyLocation }}'
       groups: awsEC2
    loop: '{{ ec2.instances }}'
    tags: default
  
  - name: Rename AWS EC2 instance
    amazon.aws.ec2_tag:
      aws_profile: '{{ awsProfile }}'
      region: '{{ awsRegion }}'
      resource: '{{ item }}'
      tags:
        Name: '{{ semaphore_vars.task_details.username|upper }}-{{ imageName }}'
        Owner: '{{ ssoEmail }}'
      state: present
    loop: '{{ ec2.instance_ids }}'
    tags: default

  - name: SSH Check
    ansible.builtin.wait_for:
      host: '{{ item.public_ip_address }}'
      port: 22
      timeout: 120
    loop: '{{ ec2.instances }}'
    tags: default

- name: Modify OS Config
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import system.yml
    import_tasks: system.yml
  tags: default

- name: Manage Users
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks: 
  - name: Import users.yml
    import_tasks: users.yml
  no_log: True
  tags: default

- name: Install Software
  hosts: awsEC2
  gather_facts: yes
  become: yes
  tasks:
  - name: Import software.yml
    import_tasks: software.yml
  tags: default

- name: Create Podman Containers
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import podman.yml
    import_tasks: podman.yml

- name: Add CRON Jobs
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import cron.yml
    import_tasks: cron.yml
  tags: default

- name : EC2 Instance Data
  hosts: local
  gather_facts: no
  tasks:
  - name: Refresh EC2 Instance Data
    amazon.aws.ec2_instance_info:
      aws_profile: '{{ awsProfile }}'
      region: '{{ awsRegion }}'
      instance_ids: '{{ ec2.instance_ids }}'
    register: updatedEC2
  tags: default

- name: AWS EC2 Instance Created and Setup
  hosts: local
  gather_facts: yes
  tasks:
  - name: WebAPI Notification
    ansible.builtin.uri:
      url: '{{ webAPI }}'
      method: POST
      body_format: json
      body:
        username: '{{ semaphore_vars.task_details.username|upper }}-{{ imageName }} Build Complete'
        content: "Public IP - {{ item.public_ip_address }} // Public DNS - {{ item.public_dns_name }} // DB - {{ hostvars['awsEC2'].DBNAME }} // DB USER - {{ hostvars['awsEC2'].DBUSER }} // DB PORT - {{ hostvars['awsEC2'].DBPORT }}"
      status_code:
          - 200
          - 202
          - 204
    loop: '{{ updatedEC2.instances }}'
    tags: default
    
  - name: Display AWS EC2 Information
    debug:
      msg: 
      - 'Instance Name   - {{ semaphore_vars.task_details.username|upper }}-{{ imageName }}'
      - 'AWS ID          - {{ item.instance_id }}'
      - 'Public IP       - {{ item.public_ip_address }}'
      - 'Public DNS      - {{ item.public_dns_name }}'
      - 'Private IP      - {{ item.private_ip_address }}'
      - 'Private DNS     - {{ item.private_dns_name }}'
      - 'DB              - {{ hostvars["awsEC2"].DBNAME }}'
      - 'DB USER         - {{ hostvars["awsEC2"].DBUSER }}'
      - 'DB PORT         - {{ hostvars["awsEC2"].DBPORT }}'
    loop: '{{ updatedEC2.instances }}'
    tags: default