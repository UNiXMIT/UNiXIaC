- name: SSO 2FA
  hosts: local
  gather_facts: no
  tasks:
  - name: Import sso.yml
    import_tasks: sso.yml
  no_log: True
  tags: default

- name: AWS EC2 Management
  hosts: local
  vars:
    tempName: SEM-{{ 2048 | random }}
  gather_facts: no
  tasks:
  - name: Create AWS EC2 instance
    amazon.aws.ec2_instance:
      user_data: |
        <powershell>
        net user administrator {{ myPassword }}
        iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ansible/ansible-documentation/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))
        </powershell>
      name: '{{ tempName }}'
      image_id: '{{ awsAMI }}'
      key_name: '{{ keyName }}'
      network:  
        assign_public_ip: yes
      security_groups: '{{ securityGroups }}'
      region: '{{ awsRegion }}'
      availability_zone: '{{ availabilityZone }}'
      aws_profile: '{{ awsProfile }}'
      instance_type: '{{ instanceType }}'
      count: '{{ vmCount | default(1) }}'
      volumes:
      - device_name: '{{ deviceName }}'
        ebs:
         volume_type: '{{ volumeType }}'
         volume_size: '{{ volumeSize }}'
      state: running
      wait: true
    register: ec2
    no_log: True
    tags: default

  - name: Add Host to awsEC2 Group 
    add_host: 
      hostname: '{{ item.public_ip_address }}'
      ansible_user: '{{ ansibleUser }}'
      ansible_password: '{{ myPassword }}'
      ansible_connection: winrm
      ansible_winrm_transport: basic
      ansible_winrm_server_cert_validation: ignore
      ansible_port: 5985
      ansible_winrm_operation_timeout_sec: 120
      ansible_winrm_read_timeout_sec: 140
      groups: awsEC2
    loop: '{{ ec2.instances }}'
    no_log: True
    tags: default

  - name: Rename AWS EC2 instance
    amazon.aws.ec2_tag:
      aws_profile: '{{ awsProfile }}'
      region: '{{ awsRegion }}'
      resource: '{{ item }}'
      tags:
        Name: '{{ semaphore_vars.task_details.username|upper }}-{{ imageName }}'
        Owner: '{{ ssoEmail }}'
        OS: '{{ imageName }}'
      state: present
    loop: '{{ ec2.instance_ids }}'
    tags: default

  - name: WinRM Check
    ansible.builtin.wait_for:
      host: '{{ item.public_ip_address }}'
      port: 5985
      timeout: 300
    loop: '{{ ec2.instances }}'
    tags: default

- name: Optimise Ansible on Windows
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import optimise.yml
    import_tasks: optimise.yml
  tags: default

- name: Modify OS Config
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import system.yml
    import_tasks: system.yml
  tags: default

- name: Add Users
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import users.yml
    import_tasks: users.yml
  no_log: True
  tags: default

- name: Install Software
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import software.yml
    import_tasks: software.yml
  tags: default

- name: Install VPN
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import vpn.yml
    import_tasks: vpn.yml
  tags: default

- name: Install Visual Studio
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import vs.yml 
    import_tasks: vs.yml

- name: Install VSCode + Extensions
  hosts: awsEC2
  gather_facts: no
  become: yes
  become_user: '{{ myUsername }}'
  become_method: runas
  become_flags: logon_type=interactive logon_flags=with_profile
  vars:
    ansible_become_pass: '{{ myPassword }}'
  tasks:
  - name: Import vscode.yml
    import_tasks: vscode.yml
  no_log: True
  tags: default

- name: Modify {{ myUsername }} User OS Config
  hosts: awsEC2
  gather_facts: no
  become: yes
  become_user: '{{ myUsername }}'
  become_method: runas
  become_flags: logon_type=interactive logon_flags=with_profile
  vars:
    ansible_become_pass: '{{ myPassword }}'
  tasks:
  - name: Import systemUser.yml
    import_tasks: systemUser.yml
  no_log: True
  tags: default

- name: Create Support Files and Directories
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import createFilesDir.yml
    import_tasks: createFilesDir.yml
  tags: default


- name: Install ED 5.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ed50.yml
    import_tasks: ed50.yml

- name: Install ED 6.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ed60.yml
    import_tasks: ed60.yml

- name: Install ED 7.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ed70.yml
    import_tasks: ed70.yml

- name: Install ED 8.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ed80.yml
    import_tasks: ed80.yml

- name: Install ED 9.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ed90.yml
    import_tasks: ed90.yml

- name: Setup ED
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ed.yml
    import_tasks: ed.yml

- name: extend 10.4.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import extend1040.yml
    import_tasks: extend1040.yml

- name: extend 10.5.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import extend1050.yml
    import_tasks: extend1050.yml

- name: Install extend
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import extend.yml
    import_tasks: extend.yml
  tags: extend

- name: Reboot EC2 Instance
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Reboot
    win_reboot:
  tags: default

- name: AWS EC2 Instance Created and Setup
  hosts: local
  gather_facts: no
  tasks:
  - name: AWS EC2 Information
    debug:
      msg: 
      - 'Instance Name   - {{ semaphore_vars.task_details.username|upper }}-{{ imageName }}'
      - 'AWS ID          - {{ item.instance_id }}'
      - 'Public IP       - {{ item.public_ip_address }}'
      - 'Private IP      - {{ item.private_ip_address }}'
    loop: '{{ ec2.instances }}'
  tags: default