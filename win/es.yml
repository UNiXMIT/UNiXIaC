- name: Download ES 
  block:
    - name: Get {{ installerNameES }} Download URL from S3
      amazon.aws.s3_object:
        # profile: '{{ awsProfile }}'
        bucket: mturner
        mode: geturl
        object: '{{ S3Prefix }}{{ installerNameES }}'
        region: eu-west-2
        expiry: 4000
        sig_v4: true
      register: s3es
      delegate_to: localhost

    - name: Get SafeNet License Download URL from S3
      amazon.aws.s3_object:
        # profile: '{{ awsProfile }}'
        bucket: mturner
        mode: geturl
        object: ED/Licenses/lservrc.net
        region: eu-west-2
        expiry: 4000
        sig_v4: true
      register: s3sn
      delegate_to: localhost
      when: edVer | int <= 90
    
    - name: Get AutoPass License Download URL from S3
      amazon.aws.s3_object:
        # profile: '{{ awsProfile }}'
        bucket: mturner
        mode: geturl
        object: ED/Licenses/LicFile.txt
        region: eu-west-2
        expiry: 4000
        sig_v4: true
      register: s3ap
      delegate_to: localhost
      when: edVer | int >= 80

    - name: Download {{ installerNameES }}
      ansible.windows.win_get_url:
        url: '{{ s3es.url }}'
        dest: C:\MFInstallers\
      register: result
      retries: 5
      delay: 30
      until: result is not failed
    
    - name: Download SafeNet License
      ansible.windows.win_get_url:
        url: '{{ s3sn.url }}'
        dest: C:\MFInstallers\
      when: edVer | int <= 90
      register: result
      retries: 5
      delay: 30
      until: result is not failed
    
    - name: Download AutoPass License
      ansible.windows.win_get_url:
        url: '{{ s3ap.url }}'
        dest: C:\MFInstallers\
      when: edVer | int >= 80
      register: result
      retries: 5
      delay: 30
      until: result is not failed
  tags: es

- name: Download ES PU 
  block:
    - name: Get {{ installerNameESPU }} Download URL from S3
      amazon.aws.s3_object:
        # profile: '{{ awsProfile }}'
        bucket: mturner
        mode: geturl
        object: '{{ S3PrefixPU }}{{ installerNameESPU }}'
        region: eu-west-2
        expiry: 4000
        sig_v4: true
      register: s3espu
      delegate_to: localhost
      
    - name: Download {{ installerNameESPU }}
      ansible.windows.win_get_url:
        url: '{{ s3espu.url }}'
        dest: C:\MFInstallers\
      register: result
      retries: 5
      delay: 30
      until: result is not failed
  tags: espu

- name: Add ES Tags
  amazon.aws.ec2_tag:
    # aws_profile: '{{ awsProfile }}'
    region: "{{ hostvars['localhost']['awsRegion'] }}"
    resource: '{{ item }}'
    tags:
      Name: '{{ semaphore_vars.task_details.username|upper }}-{{ imageName }} {{ productName }}'
      ES: '{{ installerNameES }}'
    state: present
  loop: "{{ hostvars['localhost'].ec2.instance_ids }}"
  delegate_to: localhost
  tags: es

- name: Add ES PU Tags
  amazon.aws.ec2_tag:
    # aws_profile: '{{ awsProfile }}'
    region: "{{ hostvars['localhost']['awsRegion'] }}"
    resource: '{{ item }}'
    tags:
      ESPU: '{{ installerNameESPU }}'
    state: present
  loop: "{{ hostvars['localhost'].ec2.instance_ids }}"
  delegate_to: localhost
  tags: espu

- name: Install ES 
  block:
    - name: Install {{ installerNameES }}
      win_package:
        path: C:\MFInstallers\{{ installerNameES }}
        state: present
        arguments: /q /log C:\MFInstallers\{{ installerNameES }}.log
  tags: es

- name: Install ES PU
  block:
    - name: Install {{ installerNameESPU }}
      win_package:
        path: C:\MFInstallers\{{ installerNameESPU }}
        state: present
        arguments: /q /log C:\MFInstallers\{{ installerNameESPU }}.log
  tags: espu

- name: Create Micro Focus Directory
  ansible.windows.win_file:
    path: C:\Program Files (x86)\Micro Focus
    state: directory
  when: edVer | int >= 110
  tags: es

- name: Create Symlink for MF <<===>> Rocket
  win_command: cmd.exe /k mklink /d "C:\Program Files (x86)\Micro Focus\Enterprise Server" "C:\Program Files (x86)\Rocket Software\Enterprise Server"
  when: edVer | int >= 110
  tags: es
  
- name: Install Safenet License File
  ansible.windows.win_copy:
    src: C:\MFInstallers\lservrc.net
    dest: C:\ProgramData\Micro Focus\lservrc.net
    remote_src: true
  when: edVer | int <= 90
  tags: es
  
- name: Install AutoPass License File
  ansible.windows.win_copy:
    src: C:\MFInstallers\LicFile.txt
    dest: C:\ProgramData\Micro Focus\LicFile.txt
    remote_src: true
  when: edVer | int >= 80
  tags: es
  
- name: Stop MFDS Service
  ansible.windows.win_service:
    name: mf_CCITCP2
    state: stopped
  tags: es

- name: Enable ESMAC UI
  win_command:
    cmd: '"C:\Program Files (x86)\Micro Focus\Enterprise Server\bin\mfds.exe" --UI-on'
  when: edVer | int >= 70
  tags: es

- name: Enable ESMAC Listen All
  win_command:
    cmd: '"C:\Program Files (x86)\Micro Focus\Enterprise Server\bin\mfds.exe" --listen-all'
  tags: es

- name: Start MFDS Service
  ansible.windows.win_service:
    name: mf_CCITCP2
    state: started
  tags: es

- name: Pause for 10 seconds
  ansible.builtin.pause:
    seconds: 10
  tags: es

- name: Set SYSAD in VSAM ESM
  win_command:
    cmd: mfsecconv reset --user SYSAD --pass SYSAD
    chdir: C:\Program Files (x86)\Micro Focus\Enterprise Server\bin
  when: edVer | int >= 100
  tags: es

- name: Set SYSAD in Vault
  win_command:
    cmd: mfsecretsadmin write microfocus/temp/admin -overwrite "{'mfUser':'SYSAD', 'mfPassword':'SYSAD'}"
    chdir: C:\Program Files (x86)\Micro Focus\Enterprise Server\bin
  when: edVer | int >= 100
  tags: es

- name: Import JCL Region
  win_command:
    cmd: '"C:\Program Files (x86)\Micro Focus\Enterprise Server\bin\mfds.exe" -g 5 C:\MFSamples\JCL\JCL.xml D SYSAD SYSAD'
    chdir: C:\MFSamples\JCL
  tags: es

- name: Import CICS Region
  win_command:
    cmd: '"C:\Program Files (x86)\Micro Focus\Enterprise Server\bin\mfds.exe" -g 5 C:\MFSamples\CICS\CICS.xml D SYSAD SYSAD'
    chdir: C:\MFSamples\CICS
  tags: es

- name: Copy DFHDRDAT
  ansible.windows.win_copy:
    src: C:\Program Files (x86)\Micro Focus\Enterprise Server\etc\cas\dfhdrdat
    dest: C:\MFSamples\CICS\system\
    remote_src: true
  tags: es

- name: Stop ESCWA Service
  ansible.windows.win_service:
    name: escwa
    state: stopped
  tags: es

- name: Enable ESCWA Listen All
  community.windows.win_lineinfile:
    path: C:\ProgramData\Micro Focus\Enterprise Developer\ESCWA\commonwebadmin.json
    regex: 'MfRequestedEndpoint'
    line: '    "MfRequestedEndpoint" : "tcp:*:10086",'
  tags: es

- name: Start ESCWA Service
  ansible.windows.win_service:
    name: escwa
    state: started
  tags: es

- name: Create Symlink for ES <<===>> ED version 10.0 and below
  win_command: cmd.exe /k mklink /d "C:\Program Files (x86)\Micro Focus\Enterprise Developer" "C:\Program Files (x86)\Micro Focus\Enterprise Server"
  when: edVer | int <= 100
  tags: es

- name: Create Symlink for ES <<===>> ED version 11.0 and above
  win_command: cmd.exe /k mklink /d "C:\Program Files (x86)\Micro Focus\Enterprise Developer" "C:\Program Files (x86)\Rocket Software\Enterprise Server"
  when: edVer | int >= 110
  tags: es