- name: Set Facts
  set_fact:
    productName: 

- name: Install EPEL key 
  rpm_key:
    state: present
    key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Install EPEL
  package:
    name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm'
    state: present
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Download MSSQL ODBC Driver Repo
  get_url:
    url: https://packages.microsoft.com/config/rhel/{{ ansible_distribution_major_version }}/prod.repo
    dest: /etc/yum.repos.d/mssql-release.repo
    mode: '0775'
  when: "'arm' not in ansible_run_tags"
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Install MSSQL ODBC Driver 17
  environment:
    ACCEPT_EULA: "Y"
  package:
    name: 
      - msodbcsql17 
      - mssql-tools
    state: present
  when: "'arm' not in ansible_run_tags"

- name: Set MSSQL Tools on PATH
  copy:
    dest: /etc/profile.d/mssql.sh
    content: |
      #!/bin/bash
      export PATH="$PATH:/opt/mssql-tools/bin"
  when: "'arm' not in ansible_run_tags"

- name: Package installation
  package:
    name:
      - '@Development tools'
      - wget
      - curl
      - cronie
      - dos2unix
      - htop
      - libaio-devel
      - glibc-devel
      - glibc
      - tcpdump
      - ed
      - tmux
      - openconnect
      - jq
      - python3
      - python3-pip
      - expect
      - postgresql
      - postgresql-odbc
      - net-tools
      - lsof
      - xterm
      - xauth
    state: present
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Package installation NON-ARM
  package:
    name:
      - unixODBC-devel
      - 'libstdc++-devel.i686'
      - glibc-devel.i686
      - glibc.i686
    state: present
  when: "'arm' not in ansible_run_tags"
  register: result
  retries: 5
  delay: 30
  until: result is not failed

# - name: RHEL<=7 Package installation
#   package:
#     name: 
#       - java-11-openjdk
#       - libcanberra-gtk3
#       - webkitgtk4
#     state: present
#   when: ansible_facts['distribution_major_version'] | int <= 7

- name: RHEL<=8 Package installation
  package:
    name: spax
    state: present
  when: ansible_facts['distribution_major_version'] | int <= 8
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: RHEL>=8 Remove Default Java
  package:
    name: 
      - java*
    state: absent
  when: ansible_facts['distribution_major_version'] | int >= 8
  register: result
  retries: 5
  delay: 30
  until: result is not failed
  
- name: RHEL>=8 Package installation
  package:
    name: 
      - java-latest-openjdk
      - libnsl
      - libxcrypt
      - libncurses*
      - webkit2gtk3
      - PackageKit-gtk3-module
      - systemd-libs
      - podman
      - buildah
    state: present
  when: ansible_facts['distribution_major_version'] | int >= 8
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: RHEL>=8 Package installation NON-ARM
  package:
    name: 
      - libnsl.i686
      - libxcrypt.i686
      - libgcc.i686
      - ncurses-libs.i686
      - zlib.i686
      - systemd-libs.i686
    state: present
  when: 
    - ansible_facts['distribution_major_version'] | int >= 8
    - "'arm' not in ansible_run_tags"
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: RHEL>=9 Package installation
  package:
    name: 
      - libxcrypt-compat
    state: present
  when: ansible_facts['distribution_major_version'] | int >= 9
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: RHEL>=9 Package installation NON-ARM
  package:
    name: 
      - libxcrypt-compat.i686
    state: present
  when: 
    - ansible_facts['distribution_major_version'] | int >= 9
    - "'arm' not in ansible_run_tags"
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Enable Podman Socket
  ansible.builtin.shell: systemctl enable --now podman.socket
  when: ansible_facts['distribution_major_version'] | int >= 8

- name: Add MSSQL DSN in odbc.ini
  ansible.builtin.blockinfile:
    path: /etc/odbc.ini
    marker: "# {mark} ANSIBLE MANAGED BLOCK MSSQL"
    block: |
      [mssql]  
      Driver = ODBC Driver 17 for SQL Server  
      Server = tcp:localhost,1433
      Encrypt = yes
      TrustServerCertificate = yes

- name: Add PostgreSQL driver in odbcinst.ini
  ansible.builtin.blockinfile:
    path: /etc/odbcinst.ini
    marker: "# {mark} ANSIBLE MANAGED BLOCK PostgreSQL"
    block: |
      [PostgreSQL ANSI]
      Description=PostgreSQL ODBC driver (ANSI version)
      Driver=psqlodbca.so
      Setup=libodbcpsqlS.so

      [PostgreSQL Unicode]
      Description=PostgreSQL ODBC driver (Unicode version)
      Driver=psqlodbcw.so
      Setup=libodbcpsqlS.so

- name: Add PostgreSQL DSN in odbc.ini
  ansible.builtin.blockinfile:
    path: /etc/odbc.ini
    marker: "# {mark} ANSIBLE MANAGED BLOCK PostgreSQL"
    block: |
      [postgres]
      Description         = PostgreSQL ODBC connection
      Driver              = PostgreSQL Unicode
      Database            = {{ myUsername }}
      Servername          = 127.0.0.1
      UserName            = {{ myUsername }}
      Password            = {{ myPassword }}
      Port                = 5432

- name: Install Kubernetes (kubectl)
  ansible.builtin.shell: |
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  args:
    chdir: /tmp
  when: "'arm' not in ansible_run_tags"
  register: result
  retries: 5
  delay: 30
  until: result is not failed

- name: Install Kubernetes (kubectl) ARM
  ansible.builtin.shell: |
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  args:
    chdir: /tmp
  when: "'amd' not in ansible_run_tags"
  register: result
  retries: 5
  delay: 30
  until: result is not failed
  
- name: Create a symlink libnsl.so.1 > libnsl.so 
  ansible.builtin.file:
    src: /usr/lib64/libnsl.so.1
    path: /usr/lib64/libnsl.so 
    state: link
    owner: '{{ myUsername}}'
    group: '{{ myUsername}}'
    mode: '0775'