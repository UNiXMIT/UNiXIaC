- name: SSO 2FA
  hosts: local
  gather_facts: no
  tasks:
  - name: Import sso.yml
    import_tasks: sso.yml
  tags: [ default, destroy ]

- name: AWS EC2 Management
  hosts: local
  gather_facts: no
  tasks:
  - name: Create AWS EC2 instance
    ec2_instance:
      tower_callback:
        windows: true
        set_password: '{{ myPassword }}'
      name: '{{ imageName }}'
      image_id: '{{ awsAMI }}'
      key_name: '{{ keyName }}'
      network:  
        assign_public_ip: yes
        security-group: '{{ securityGroup }}'
      region: '{{ awsRegion }}'
      availability_zone: '{{ availabilityZone }}'
      aws_profile: '{{ awsProfile }}'
      instance_type: '{{ instanceType }}'
      count: '{{ vmCount }}'
      volumes:
      - device_name: '{{ deviceName }}'
        ebs:
         volume_type: '{{ volumeType }}'
         volume_size: '{{ volumeSize }}'
      state: running
      wait: true
    register: ec2
    tags: default

  - name: Destroy AWS EC2 instance
    ec2_instance:
      name: '{{ imageName }}'
      image_id: '{{ awsAMI }}'
      key_name: '{{ keyName }}'
      network:  
        assign_public_ip: yes
        security-group: '{{ securityGroup }}'
      region: '{{ awsRegion }}'
      availability_zone: '{{ availabilityZone }}'
      aws_profile: '{{ awsProfile }}'
      instance_type: '{{ instanceType }}'
      count: '{{ vmCount }}'
      volumes:
      - device_name: '{{ deviceName }}'
        ebs:
         volume_type: '{{ volumeType }}'
         volume_size: '{{ volumeSize }}'
      state: absent
    tags: destroy
  
  - name: Wait 60 seconds for public IP and AAP Setup
    pause:
      seconds: 60
    tags: default

  - name: Add Host to awsEC2 Group 
    add_host: 
       hostname: '{{ item.public_ip_address }}'
       ansible_user: '{{ ansibleUser }}'
       ansible_password: '{{ myPassword }}'
       ansible_connection: winrm
       ansible_winrm_transport: basic
       ansible_winrm_server_cert_validation: ignore
       ansible_port: 5986
       groups: awsEC2
    loop: '{{ ec2.instances }}'
    tags: default

- name: Optimise Ansible on Windows
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import optimise.yml
    import_tasks: optimise.yml
  tags: default

- name: Modify OS Config
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import system.yml
    import_tasks: system.yml
  tags: default

- name: Add Users
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import users.yml
    import_tasks: users.yml
  tags: default

- name: Install Software
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import software.yml
    import_tasks: software.yml
  tags: default

- name: Install Visual Studio 2022
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import vs2022.yml 
    import_tasks: vs2022.yml
  tags: vs2022

- name: Install VSCode + Extensions
  hosts: awsEC2
  gather_facts: no
  become: yes
  become_user: '{{ myUsername }}'
  become_method: runas
  become_flags: logon_type=interactive logon_flags=with_profile
  vars:
    ansible_become_pass: '{{ myPassword }}'
  tasks:
  - name: Import vscode.yml
    import_tasks: vscode.yml
  tags: default

- name: Create Support Files and Directories
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import createFilesDir.yml
    import_tasks: createFilesDir.yml
  tags: default

- name: Install EDVS2022 8.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import edvs2022_80.yml
    import_tasks: edvs2022_80.yml
  tags: edvs2022_80

- name: Install EDE 8.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import ede_80.yml
    import_tasks: ede_80.yml
  tags: ede80

- name: Install ES 8.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import es_80.yml
    import_tasks: es_80.yml
  tags: es80

- name: Install extend 10.5.0
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Import extend1050.yml
    import_tasks: extend1050.yml
  tags: extend1050

- name: Reboot EC2 Instance
  hosts: awsEC2
  gather_facts: no
  tasks:
  - name: Reboot
    win_reboot:
  tags: default

- name: AWS EC2 Instance Created and Setup
  hosts: local
  gather_facts: no
  tasks:
  - name: AWS EC2 Information
    debug:
      msg: 
      - 'AWS ID     - {{ item.instance_id }}'
      - 'Public IP  - {{ item.public_ip_address }}'
      - 'Private IP - {{ item.private_ip_address }}'
    loop: '{{ ec2.instances }}'
  tags: default