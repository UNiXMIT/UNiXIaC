- name: SSO 2FA
  hosts: local
  gather_facts: no
  tasks:
  - name: Import sso.yml
    import_tasks: sso.yml
  tags: [ default, destroy ]

- name: AWS EC2 Management
  hosts: local
  gather_facts: no
  tasks:
  - name: Create AWS EC2 instance
    ec2_instance:
      name: '{{ imageName }}'
      image_id: '{{ awsAMI }}'
      key_name: '{{ keyName }}'
      network:  
        assign_public_ip: yes
        security-group: '{{ securityGroup }}'
      region: '{{ awsRegion }}'
      availability_zone: '{{ availabilityZone }}'
      aws_profile: '{{ awsProfile }}'
      instance_type: '{{ instanceType }}'
      count: '{{ vmCount }}'
      volumes:
      - device_name: '{{ deviceName }}'
        ebs:
         volume_type: '{{ volumeType }}'
         volume_size: '{{ volumeSize }}'
      state: running
      wait: true
    register: ec2
    tags: default

  - name: Destroy AWS EC2 instance
    ec2_instance:
      name: '{{ imageName }}'
      image_id: '{{ awsAMI }}'
      key_name: '{{ keyName }}'
      network:  
        assign_public_ip: yes
        security-group: '{{ securityGroup }}'
      region: '{{ awsRegion }}'
      availability_zone: '{{ availabilityZone }}'
      aws_profile: '{{ awsProfile }}'
      instance_type: '{{ instanceType }}'
      count: '{{ vmCount }}'
      volumes:
      - device_name: '{{ deviceName }}'
        ebs:
         volume_type: '{{ volumeType }}'
         volume_size: '{{ volumeSize }}'
      state: absent
    tags: destroy
  
  - name: Wait 10 seconds for public IP
    pause:
      seconds: 10
    tags: default

  - name: Add Host to awsEC2 Group 
    add_host: 
       hostname: '{{ item.public_ip_address }}'
       ansible_port: 22
       ansible_user: '{{ ansibleUser }}'
       ansible_ssh_private_key_file: '{{ keyLocation }}'
       groups: awsEC2
    loop: '{{ ec2.instances }}'
    tags: default
  
  - name: Generate an OpenSSL public key
    openssl_publickey:
      path: /tmp/support.pub
      privatekey_path: '{{ keyLocation }}'
      format: OpenSSH
    tags: default

  - name: SSH Check
    local_action:
      module: wait_for
      host: '{{ item.public_ip_address }}'
      port: 22
      delay: 10
      timeout: 120
    loop: '{{ ec2.instances }}'
    tags: default

- name: Modify OS Config
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import system.yml
    import_tasks: system.yml
  tags: default

- name: Add Users
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks: 
  - name: Import users.yml
    import_tasks: users.yml
  tags: default

- name: Install Software
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import software.yml
    import_tasks: software.yml
  tags: default

- name: Create Support Files and Directories
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import createFilesDir.yml
    import_tasks: createFilesDir.yml
  tags: default

- name: Install ES 8.0 PU 3
  hosts: awsEC2
  gather_facts: no
  become: yes
  vars:
    installPath: /home/products/es80PU3
  tasks:
  - name: Import es_80.yml
    import_tasks: es_80.yml
  tags: es80

- name: Install extend 10.5.0
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import extend1050.yml
    import_tasks: extend1050.yml
  tags: extend1050

- name: Create MOTD
  hosts: awsEC2
  gather_facts: yes
  become: yes
  tasks:
  - name: Import motd.yml
    import_tasks: motd.yml
  tags: default

- name: Add CRON Jobs
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
  - name: Import cron.yml
    import_tasks: cron.yml
  tags: default

- name: Reboot EC2 Instance
  hosts: awsEC2
  gather_facts: no
  become: yes
  tasks:
    reboot:
  tags: default

- name: AWS EC2 Instance Created and Setup
  hosts: local
  gather_facts: no
  tasks:
    debug:
      msg: 
      - 'AWS ID     - {{ item.instance_id }}'
      - 'Public IP  - {{ item.public_ip_address }}'
      - 'Private IP - {{ item.private_ip_address }}'
    loop: '{{ ec2.instances }}'
  tags: default